// <auto-generated />
using ANTWebAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ANTWebAPI.Database.Migrations
{
    [DbContext(typeof(ANTDbContext))]
    [Migration("20250205102643_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("article_id");

                    b.Property<long>("CatalogId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("catalog_id");

                    b.Property<string>("DateOrBanner")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("date_or_banner");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("ANTArticles", (string)null);
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Catalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("catalog_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ANTCatalogs", (string)null);
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Content", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("content_id");

                    b.Property<long>("ArticleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("article_id");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ANTContents", (string)null);
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Article", b =>
                {
                    b.HasOne("ANTWebAPI.Database.Entities.Catalog", "Catalog")
                        .WithMany("Articles")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Content", b =>
                {
                    b.HasOne("ANTWebAPI.Database.Entities.Article", "Article")
                        .WithMany("Contents")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Article", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("ANTWebAPI.Database.Entities.Catalog", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
